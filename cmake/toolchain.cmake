include_guard()

execute_process(
    COMMAND ${CMAKE_CXX_COMPILER} -dumpmachine
    OUTPUT_VARIABLE COMPILER_DUMPMACHINE_OUTPUT
    OUTPUT_STRIP_TRAILING_WHITESPACE)
if(NOT COMPILER_DUMPMACHINE_OUTPUT STREQUAL "")
    set(TARGET_PROCESSOR ${COMPILER_DUMPMACHINE_OUTPUT})
else()
    set(TARGET_PROCESSOR "")
endif()

option(TOOLCHAIN_PCH "toolchain precompiled header" OFF)
option(TOOLCHAIN_UNITY "toolchain unity build" OFF)
option(TOOLCHAIN_CCACHE "toolchain ccache" OFF)
option(TOOLCHAIN_DISTCC "toolchain distcc" OFF)
if(TOOLCHAIN_PCH)
    message(STATUS "Using precompiled header")
    set(PRECOMPILED_HEADER ON)
else()
    set(PRECOMPILED_HEADER OFF)
endif()
if(TOOLCHAIN_UNITY)
    message(STATUS "Using unity build")
    set(CMAKE_UNITY_BUILD ON)
endif()
if(TOOLCHAIN_CCACHE)
    find_program(CCACHE ccache)
    if(CCACHE)
        message(STATUS "Using ccache")
        set(CMAKE_C_COMPILER_LAUNCHER ${CCACHE})
        set(CMAKE_CXX_COMPILER_LAUNCHER ${CCACHE})
    elseif()
        message(STATUS "No ccache program")
    endif()
endif()
if(TOOLCHAIN_DISTCC)
    find_program(DISTCC distcc)
    if(DISTCC)
        message(STATUS "Using distcc")
        if(NOT
           (TOOLCHAIN_CCACHE
            AND CCACHE
            AND (DEFINED ENV{CCACHE_PREFIX})
            AND ("$ENV{CCACHE_PREFIX}" STREQUAL "distcc")))
            set(CMAKE_C_COMPILER_LAUNCHER ${DISTCC})
            set(CMAKE_CXX_COMPILER_LAUNCHER ${DISTCC})
        endif()
    elseif()
        message(STATUS "No distcc program")
    endif()
endif()
unset(TOOLCHAIN_PCH CACHE)
unset(TOOLCHAIN_UNITY CACHE)
unset(TOOLCHAIN_CCACHE CACHE)
unset(TOOLCHAIN_DISTCC CACHE)

---
name: Pipeline

on:
  push:
    branches:
      - master

  workflow_dispatch:
    inputs:
      name:
        description: 'Pipeline'
        default: 'Manual trigger'
        required: false
  schedule:
    - cron: '0 0 * * MON'

jobs:
  static_analysis:
    name: Static analysis
    runs-on: ubuntu-latest
    container:
      image: ryftchen/foo:latest
      options: --privileged
    timeout-minutes: 20

    steps:
      - name: Prepare
        run: |
          git config --global --add safe.directory '*'

      - name: Checkout
        uses: actions/checkout@v4.1.0

      - name: Pre-check
        run: |
          ./script/build.sh --hook --spell --statistics
          git status

      - name: Create artifact
        run: |
          ./script/build.sh --browser --doxygen

      - name: Upload artifact
        uses: actions/upload-artifact@v4.3.0
        with:
          name: foo_artifact
          path: ./document/artifact/foo_*.tar.bz2
          retention-days: 7

      - name: Evaluate code quality
        run: |
          ./script/build.sh --format --lint
          git status

      - name: Evaluate security
        run: |
          ./script/build.sh --query --assume y
          git status

  dynamic_analysis:
    name: Dynamic analysis
    runs-on: ubuntu-latest
    container:
      image: ryftchen/foo:latest
      options: --privileged
    timeout-minutes: 20

    steps:
      - name: Prepare
        run: |
          git config --global --add safe.directory '*'

      - name: Checkout
        uses: actions/checkout@v4.1.0

      - name: Run base debug version
        run: |
          ./script/build.sh --initialize
          ./script/run.py --test --build dbg --repeat 1
          cat ./report/foo_run.report
          ./script/run.py --build dbg --repeat 1
          cat ./report/foo_run.report

      - name: Run base release version
        run: |
          ./script/run.py --test --build rls --repeat 1
          cat ./report/foo_run.report
          ./script/run.py --build rls --repeat 1
          cat ./report/foo_run.report

      - name: Perform code coverage checks (debug)
        run: |
          ./script/run.py --test --check cov --build dbg --repeat 1
          cat ./report/foo_run.report
          ./script/run.py --check cov --build dbg --repeat 1
          cat ./report/foo_run.report

      - name: Perform code coverage checks (release)
        run: |
          ./script/run.py --test --check cov --build rls --repeat 1
          cat ./report/foo_run.report
          ./script/run.py --check cov --build rls --repeat 1
          cat ./report/foo_run.report

      - name: Perform memory leak checks (debug)
        run: |
          ./script/run.py --test --check mem --build dbg --repeat 1
          cat ./report/foo_run.report
          ./script/run.py --check mem --build dbg --repeat 1
          cat ./report/foo_run.report

      - name: Perform memory leak checks (release)
        run: |
          ./script/run.py --test --check mem --build rls --repeat 1
          cat ./report/foo_run.report
          ./script/run.py --check mem --build rls --repeat 1
          cat ./report/foo_run.report

  extended_analysis:
    name: Extended analysis
    runs-on: ubuntu-latest
    container:
      image: ryftchen/foo:latest
      options: --privileged
    timeout-minutes: 20

    steps:
      - name: Prepare
        run: |
          git config --global --add safe.directory '*'

      - name: Checkout
        uses: actions/checkout@v4.1.0

      - name: Development environment
        run: |
          ./script/build.sh --container --assume y
          ./script/build.sh --archive --assume y
          ./script/build.sh
          ./script/build.sh --test
          ./script/build.sh --install
          ./script/build.sh --uninstall
          ./script/build.sh --clean

      - name: Enhanced environment
        run: |
          ./script/build.sh --initialize
          sed -i 's/FOO_BLD_COMPILER=.*/FOO_BLD_COMPILER=gcc/' ./script/.build_env
          sed -i 's/FOO_BLD_PARALLEL=.*/FOO_BLD_PARALLEL=2/' ./script/.build_env
          sed -i 's/FOO_BLD_CCACHE=.*/FOO_BLD_CCACHE=on/' ./script/.build_env
          sed -i 's/FOO_BLD_TMPFS=.*/FOO_BLD_TMPFS=on/' ./script/.build_env
          ./script/run.py --dump
          ./script/run.py --test --build dbg --repeat 1
          ./script/run.py --analyze
          ./script/run.py --build dbg --repeat 1
          ./script/run.py --analyze
          ./script/run.py --test --build rls --repeat 1
          ./script/run.py --analyze
          ./script/run.py --build rls --repeat 1
          ./script/run.py --analyze
          ./script/build.sh --clean

      - name: Run sanitizer (debug)
        run: |
          ./script/run.py --test --sanitizer asan --build dbg --repeat 1
          ./script/run.py --analyze
          ./script/run.py --sanitizer asan --build dbg --repeat 1
          ./script/run.py --analyze
          ./script/run.py --test --sanitizer tsan --build dbg --repeat 1
          ./script/run.py --analyze
          ./script/run.py --sanitizer tsan --build dbg --repeat 1
          ./script/run.py --analyze
          ./script/run.py --test --sanitizer ubsan --build dbg --repeat 1
          ./script/run.py --analyze
          ./script/run.py --sanitizer ubsan --build dbg --repeat 1
          ./script/run.py --analyze

      - name: Run sanitizer (release)
        run: |
          ./script/run.py --test --sanitizer asan --build rls --repeat 1
          ./script/run.py --analyze
          ./script/run.py --sanitizer asan --build rls --repeat 1
          ./script/run.py --analyze
          ./script/run.py --test --sanitizer tsan --build rls --repeat 1
          ./script/run.py --analyze
          ./script/run.py --sanitizer tsan --build rls --repeat 1
          ./script/run.py --analyze
          ./script/run.py --test --sanitizer ubsan --build rls --repeat 1
          ./script/run.py --analyze
          ./script/run.py --sanitizer ubsan --build rls --repeat 1
          ./script/run.py --analyze

  deploy_pages:
    name: Deploy pages
    if: (github.event_name == 'push') || (github.event_name == 'workflow_dispatch')
    runs-on: ubuntu-latest
    container:
      image: ryftchen/foo:latest
      options: --privileged
    timeout-minutes: 20
    permissions: write-all
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    concurrency:
      group: 'pages'
      cancel-in-progress: false

    steps:
      - name: Prepare
        run: |
          git config --global --add safe.directory '*'

      - name: Checkout
        uses: actions/checkout@v4.1.0

      - name: Documentation
        run: |
          ./script/build.sh --doxygen

      - name: Delete deployment environment
        uses: strumwolf/delete-deployment-environment@v3.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: github-pages
          onlyRemoveDeployments: true

      - name: Configure pages
        uses: actions/configure-pages@v5.0.0

      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3.0.0
        with:
          path: ./document/doxygen

      - name: Deploy pages
        id: deployment
        uses: actions/deploy-pages@v4.0.0

      - name: Clean workflow runs
        uses: dmvict/clean-workflow-runs@v1.2.2
        with:
          save_period: '00:01:00'
          save_min_runs_number: 0
...

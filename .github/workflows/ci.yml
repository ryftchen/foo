---
name: CI

on:
  push:
    branches: [master]

  workflow_dispatch:
    inputs:
      name:
        description: 'CI'
        default: 'Manual trigger'
        required: false
  schedule:
    - cron: '0 0 * * MON'

jobs:
  Precheck:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    container: ryftchen/foo:latest

    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Prepare
        run: |
          git config --global --add safe.directory '*'

      - name: Checkout
        uses: actions/checkout@v3.0.0

      - name: Check spelling
        uses: check-spelling/check-spelling@v0.0.20
        with:
          config: .github/actions/check_spelling
          post_comment: 0
          extra_dictionaries:
            cspell:bash/bash-words.txt
            cspell:cpp/cpp.txt
            cspell:filetypes/filetypes.txt
            cspell:python/python.txt
          check_extra_dictionaries: ''

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: cpp

      - name: Manual build
        run: |
          mkdir ./build
          export CC=/usr/bin/clang-12 CXX=/usr/bin/clang++-12
          cmake -S . -B ./build -DCMAKE_CXX_COMPILER=clang++-12 -DCMAKE_BUILD_TYPE=Release
          make -C ./build -j

      - name: Perform CodeQL analysis
        uses: github/codeql-action/analyze@v2

  Pipeline:
    runs-on: ubuntu-latest
    container: ryftchen/foo:latest

    steps:
      - name: Prepare
        run: |
          git config --global --add safe.directory '*'
  
      - name: Checkout
        uses: actions/checkout@v3.0.0

      - name: Check
        run: |
          ./script/build.sh --cleanup
          ./script/build.sh --format --lint --report --release
          git status

      - name: Build
        run: |
          ./script/build.sh --release

      - name: Test
        run: |
          export TERM=linux
          export TERMINFO=/etc/terminfo
          ./script/test.py --check coverage memory --build release

      - name: Upload artifacts
        uses: actions/upload-artifact@v3.0.0
        with:
          name: foo_artifact
          path: ./temp/foo_html_*.tar.bz2
          retention-days: 7
...

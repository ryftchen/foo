---
AnalyzeTemporaryDtors: false
Checks: >
  bugprone-argument-comment,
  bugprone-assert-side-effect,
  bugprone-bad-signal-to-kill-thread,
  bugprone-bool-pointer-implicit-conversion,
  bugprone-dangling-handle,
  bugprone-dynamic-static-initializers,
  bugprone-inaccurate-erase,
  bugprone-incorrect-roundings,
  bugprone-lambda-function-name,
  bugprone-macro-repeated-side-effects,
  bugprone-misplaced-operator-in-strlen-in-alloc,
  bugprone-misplaced-pointer-arithmetic-in-alloc,
  bugprone-move-forwarding-reference,
  bugprone-multiple-statement-macro,
  bugprone-no-escape,
  bugprone-not-null-terminated-result,
  bugprone-parent-virtual-call,
  bugprone-posix-return,
  bugprone-signed-char-misuse,
  bugprone-sizeof-container,
  bugprone-spuriously-wake-up-functions,
  bugprone-string-constructor,
  bugprone-string-integer-assignment,
  bugprone-string-literal-with-embedded-nul,
  bugprone-suspicious-enum-usage,
  bugprone-suspicious-memset-usage,
  bugprone-suspicious-missing-comma,
  bugprone-suspicious-semicolon,
  bugprone-suspicious-string-compare,
  bugprone-swapped-arguments,
  bugprone-terminating-continue,
  bugprone-throw-keyword-missing,
  bugprone-undelegated-constructor,
  bugprone-unhandled-self-assignment,
  bugprone-unused-raii,
  bugprone-use-after-move,
  bugprone-virtual-near-miss,
  cert-dcl21-cpp,
  cert-dcl37-c,
  cert-err52-cpp,
  cert-err58-cpp,
  cert-err61-cpp,
  cert-flp30-c,
  cert-mem57-cpp,
  cert-msc30-c,
  cert-msc32-c,
  cert-msc50-cpp,
  cert-msc51-cpp,
  cert-oop57-cpp,
  cert-oop58-cpp,
  cert-pos44-c,
  clang-analyzer-core.*,
  clang-analyzer-cplusplus.*,
  clang-analyzer-deadcode.*,
  clang-analyzer-nullability.*,
  clang-analyzer-optin.*,
  clang-analyzer-security.*,
  clang-analyzer-unix.*,
  clang-analyzer-valist.*,
  cppcoreguidelines-avoid-goto,
  cppcoreguidelines-no-malloc,
  cppcoreguidelines-pro-type-cstyle-cast,
  cppcoreguidelines-pro-type-const-cast,
  cppcoreguidelines-pro-type-member-init,
  cppcoreguidelines-pro-type-reinterpret-cast,
  cppcoreguidelines-pro-type-union-access,
  fuchsia-virtual-inheritance,
  google-build-namespaces,
  google-build-using-namespace,
  google-explicit-constructor,
  google-readability-todo,
  google-runtime-operator,
  hicpp-avoid-goto,
  hicpp-exception-baseclass,
  hicpp-multiway-paths-covered,
  hicpp-no-assembler,
  linuxkernel-must-use-errs,
  llvm-namespace-comment,
  misc-definitions-in-headers,
  misc-misplaced-const,
  misc-new-delete-overloads,
  misc-non-copyable-objects,
  misc-redundant-expression,
  misc-static-assert,
  misc-throw-by-value-catch-by-reference,
  misc-unconventional-assign-operator,
  misc-unused-alias-decls,
  misc-unused-parameters,
  misc-unused-using-decls,
  modernize-concat-nested-namespaces,
  modernize-deprecated-headers,
  modernize-deprecated-ios-base-aliases,
  modernize-make-shared,
  modernize-make-unique,
  modernize-raw-string-literal,
  modernize-redundant-void-arg,
  modernize-replace-auto-ptr,
  modernize-replace-disallow-copy-and-assign-macro,
  modernize-return-braced-init-list,
  modernize-shrink-to-fit,
  modernize-unary-static-assert,
  modernize-use-emplace,
  modernize-use-equals-default,
  modernize-use-equals-delete,
  modernize-use-nodiscard,
  modernize-use-noexcept,
  modernize-use-nullptr,
  modernize-use-override,
  modernize-use-uncaught-exceptions,
  performance-implicit-conversion-in-loop,
  performance-inefficient-algorithm,
  performance-inefficient-vector-operation,
  performance-move-const-arg,
  performance-move-constructor-init,
  performance-no-automatic-move,
  performance-noexcept-move-constructor,
  portability-restrict-system-includes,
  portability-simd-intrinsics,
  readability-braces-around-statements,
  readability-const-return-type,
  readability-convert-member-functions-to-static,
  readability-delete-null-pointer,
  readability-function-cognitive-complexity,
  readability-function-size,
  readability-identifier-naming,
  readability-magic-numbers,
  readability-make-member-function-const,
  readability-misleading-indentation,
  readability-named-parameter,
  readability-qualified-auto,
  readability-redundant-access-specifiers,
  readability-redundant-function-ptr-dereference,
  readability-redundant-preprocessor,
  readability-redundant-string-cstr,
  readability-redundant-string-init,
  readability-simplify-subscript-expr,
  readability-uniqueptr-delete-release,
  readability-uppercase-literal-suffix
CheckOptions:
  - key: cppcoreguidelines-special-member-functions.AllowSoleDefaultDtor
    value: '1'
  - key: cppcoreguidelines-special-member-functions.AllowMissingMoveFunctions
    value: '0'
  - key: google-global-names-in-headers.HeaderFileExtensions
    value: h,hh,hpp,hxx
  - key: hicpp-multiway-paths-covered.WarnOnMissingElse
    value: '0'
  - key: hicpp-signed-bitwise.IgnorePositiveIntegerLiterals
    value: 'true'
  - key: misc-definitions-in-headers.HeaderFileExtensions
    value: h,hh,hpp,hxx
  - key: misc-definitions-in-headers.UseHeaderFileExtension
    value: '1'
  - key: misc-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic
    value: '1'
  - key: modernize-use-auto.RemoveStars
    value: '1'
  - key: modernize-use-default-member-init.UseAssignment
    value: '1'
  - key: performance-inefficient-string-concatenation.StrictMode
    value: '1'
  - key: readability-function-cognitive-complexity.Threshold
    value: '25'
  - key: readability-function-cognitive-complexity.IgnoreMacros
    value: 'true'
  - key: readability-function-size.BranchThreshold
    value: '10'
  - key: readability-function-size.LineThreshold
    value: '200'
  - key: readability-function-size.ParameterThreshold
    value: '7'
  - key: readability-function-size.StatementThreshold
    value: '60'
  - key: readability-identifier-naming.ClassCase
    value: CamelCase
  - key: readability-identifier-naming.ConstantCase
    value: camelBack
  - key: readability-identifier-naming.EnumCase
    value: CamelCase
  - key: readability-identifier-naming.FunctionCase
    value: camelBack
  - key: readability-identifier-naming.MacroDefinitionCase
    value: UPPER_CASE
  - key: readability-identifier-naming.MemberCase
    value: camelBack
  - key: readability-identifier-naming.MemberPrefix
    value: ''
  - key: readability-identifier-naming.MemberSuffix
    value: ''
  - key: readability-identifier-naming.MethodCase
    value: camelBack
  - key: readability-identifier-naming.NamespaceCase
    value: lower_case
  - key: readability-identifier-naming.ParameterCase
    value: camelBack
  - key: readability-identifier-naming.StructCase
    value: CamelCase
  - key: readability-identifier-naming.TypedefCase
    value: CamelCase
  - key: readability-identifier-naming.TypeAliasCase
    value: CamelCase
  - key: readability-identifier-naming.TypeTemplateParameterCase
    value: CamelCase
  - key: readability-identifier-naming.TypeTemplateParameterIgnoredRegexp
    value: expr-type
  - key: readability-identifier-naming.UnionCase
    value: CamelCase
  - key: readability-identifier-naming.VariableCase
    value: camelBack
  - key: readability-magic-numbers.IgnoreAllFloatingPointValues
    value: 'true'
  - key: readability-magic-numbers.IgnoreBitFieldsWidths
    value: 'false'
  - key: readability-magic-numbers.IgnorePowersOf2IntegerValues
    value: 'true'
  - key: readability-magic-numbers.IgnoredIntegerValues
    value: '0;1'
  - key: readability-simplify-boolean-expr.ChainedConditionalAssignment
    value: '1'
  - key: readability-simplify-boolean-expr.ChainedConditionalReturn
    value: '1'
  - key: readability-implicit-bool-conversion.AllowPointerConditions
    value: '1'
UseColor: true
WarningsAsErrors: '*'
...
